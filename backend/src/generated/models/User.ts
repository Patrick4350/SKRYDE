
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `User` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model User
 * 
 */
export type UserModel = runtime.Types.Result.DefaultSelection<Prisma.$UserPayload>

export type AggregateUser = {
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

export type UserAvgAggregateOutputType = {
  rating: number | null
  currentLatitude: number | null
  currentLongitude: number | null
}

export type UserSumAggregateOutputType = {
  rating: number | null
  currentLatitude: number | null
  currentLongitude: number | null
}

export type UserMinAggregateOutputType = {
  id: string | null
  email: string | null
  password: string | null
  name: string | null
  school: string | null
  role: $Enums.UserRole | null
  roleType: string | null
  verified: boolean | null
  rating: number | null
  createdAt: Date | null
  updatedAt: Date | null
  vehicleInfo: string | null
  licensePlate: string | null
  currentLatitude: number | null
  currentLongitude: number | null
  lastLocationUpdate: Date | null
}

export type UserMaxAggregateOutputType = {
  id: string | null
  email: string | null
  password: string | null
  name: string | null
  school: string | null
  role: $Enums.UserRole | null
  roleType: string | null
  verified: boolean | null
  rating: number | null
  createdAt: Date | null
  updatedAt: Date | null
  vehicleInfo: string | null
  licensePlate: string | null
  currentLatitude: number | null
  currentLongitude: number | null
  lastLocationUpdate: Date | null
}

export type UserCountAggregateOutputType = {
  id: number
  email: number
  password: number
  name: number
  school: number
  role: number
  roleType: number
  verified: number
  rating: number
  createdAt: number
  updatedAt: number
  vehicleInfo: number
  licensePlate: number
  currentLatitude: number
  currentLongitude: number
  lastLocationUpdate: number
  _all: number
}


export type UserAvgAggregateInputType = {
  rating?: true
  currentLatitude?: true
  currentLongitude?: true
}

export type UserSumAggregateInputType = {
  rating?: true
  currentLatitude?: true
  currentLongitude?: true
}

export type UserMinAggregateInputType = {
  id?: true
  email?: true
  password?: true
  name?: true
  school?: true
  role?: true
  roleType?: true
  verified?: true
  rating?: true
  createdAt?: true
  updatedAt?: true
  vehicleInfo?: true
  licensePlate?: true
  currentLatitude?: true
  currentLongitude?: true
  lastLocationUpdate?: true
}

export type UserMaxAggregateInputType = {
  id?: true
  email?: true
  password?: true
  name?: true
  school?: true
  role?: true
  roleType?: true
  verified?: true
  rating?: true
  createdAt?: true
  updatedAt?: true
  vehicleInfo?: true
  licensePlate?: true
  currentLatitude?: true
  currentLongitude?: true
  lastLocationUpdate?: true
}

export type UserCountAggregateInputType = {
  id?: true
  email?: true
  password?: true
  name?: true
  school?: true
  role?: true
  roleType?: true
  verified?: true
  rating?: true
  createdAt?: true
  updatedAt?: true
  vehicleInfo?: true
  licensePlate?: true
  currentLatitude?: true
  currentLongitude?: true
  lastLocationUpdate?: true
  _all?: true
}

export type UserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which User to aggregate.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Users
  **/
  _count?: true | UserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: UserAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: UserSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: UserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: UserMaxAggregateInputType
}

export type GetUserAggregateType<T extends UserAggregateArgs> = {
      [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser[P]>
    : Prisma.GetScalarType<T[P], AggregateUser[P]>
}




export type UserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithAggregationInput | Prisma.UserOrderByWithAggregationInput[]
  by: Prisma.UserScalarFieldEnum[] | Prisma.UserScalarFieldEnum
  having?: Prisma.UserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: UserCountAggregateInputType | true
  _avg?: UserAvgAggregateInputType
  _sum?: UserSumAggregateInputType
  _min?: UserMinAggregateInputType
  _max?: UserMaxAggregateInputType
}

export type UserGroupByOutputType = {
  id: string
  email: string
  password: string
  name: string
  school: string
  role: $Enums.UserRole
  roleType: string
  verified: boolean
  rating: number
  createdAt: Date
  updatedAt: Date
  vehicleInfo: string | null
  licensePlate: string | null
  currentLatitude: number | null
  currentLongitude: number | null
  lastLocationUpdate: Date | null
  _count: UserCountAggregateOutputType | null
  _avg: UserAvgAggregateOutputType | null
  _sum: UserSumAggregateOutputType | null
  _min: UserMinAggregateOutputType | null
  _max: UserMaxAggregateOutputType | null
}

type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<UserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], UserGroupByOutputType[P]>
      }
    >
  >



export type UserWhereInput = {
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  id?: Prisma.StringFilter<"User"> | string
  email?: Prisma.StringFilter<"User"> | string
  password?: Prisma.StringFilter<"User"> | string
  name?: Prisma.StringFilter<"User"> | string
  school?: Prisma.StringFilter<"User"> | string
  role?: Prisma.EnumUserRoleFilter<"User"> | $Enums.UserRole
  roleType?: Prisma.StringFilter<"User"> | string
  verified?: Prisma.BoolFilter<"User"> | boolean
  rating?: Prisma.FloatFilter<"User"> | number
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  vehicleInfo?: Prisma.StringNullableFilter<"User"> | string | null
  licensePlate?: Prisma.StringNullableFilter<"User"> | string | null
  currentLatitude?: Prisma.FloatNullableFilter<"User"> | number | null
  currentLongitude?: Prisma.FloatNullableFilter<"User"> | number | null
  lastLocationUpdate?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  ridesAsDriver?: Prisma.RideListRelationFilter
  ridesAsRider?: Prisma.RideRequestListRelationFilter
  offers?: Prisma.OfferListRelationFilter
  reviewsGiven?: Prisma.ReviewListRelationFilter
  reviewsReceived?: Prisma.ReviewListRelationFilter
  locationPings?: Prisma.LocationPingListRelationFilter
  notificationsReceived?: Prisma.NotificationListRelationFilter
  notificationsSent?: Prisma.NotificationListRelationFilter
}

export type UserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  name?: Prisma.SortOrder
  school?: Prisma.SortOrder
  role?: Prisma.SortOrder
  roleType?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  vehicleInfo?: Prisma.SortOrderInput | Prisma.SortOrder
  licensePlate?: Prisma.SortOrderInput | Prisma.SortOrder
  currentLatitude?: Prisma.SortOrderInput | Prisma.SortOrder
  currentLongitude?: Prisma.SortOrderInput | Prisma.SortOrder
  lastLocationUpdate?: Prisma.SortOrderInput | Prisma.SortOrder
  ridesAsDriver?: Prisma.RideOrderByRelationAggregateInput
  ridesAsRider?: Prisma.RideRequestOrderByRelationAggregateInput
  offers?: Prisma.OfferOrderByRelationAggregateInput
  reviewsGiven?: Prisma.ReviewOrderByRelationAggregateInput
  reviewsReceived?: Prisma.ReviewOrderByRelationAggregateInput
  locationPings?: Prisma.LocationPingOrderByRelationAggregateInput
  notificationsReceived?: Prisma.NotificationOrderByRelationAggregateInput
  notificationsSent?: Prisma.NotificationOrderByRelationAggregateInput
}

export type UserWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  email?: string
  AND?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  OR?: Prisma.UserWhereInput[]
  NOT?: Prisma.UserWhereInput | Prisma.UserWhereInput[]
  password?: Prisma.StringFilter<"User"> | string
  name?: Prisma.StringFilter<"User"> | string
  school?: Prisma.StringFilter<"User"> | string
  role?: Prisma.EnumUserRoleFilter<"User"> | $Enums.UserRole
  roleType?: Prisma.StringFilter<"User"> | string
  verified?: Prisma.BoolFilter<"User"> | boolean
  rating?: Prisma.FloatFilter<"User"> | number
  createdAt?: Prisma.DateTimeFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"User"> | Date | string
  vehicleInfo?: Prisma.StringNullableFilter<"User"> | string | null
  licensePlate?: Prisma.StringNullableFilter<"User"> | string | null
  currentLatitude?: Prisma.FloatNullableFilter<"User"> | number | null
  currentLongitude?: Prisma.FloatNullableFilter<"User"> | number | null
  lastLocationUpdate?: Prisma.DateTimeNullableFilter<"User"> | Date | string | null
  ridesAsDriver?: Prisma.RideListRelationFilter
  ridesAsRider?: Prisma.RideRequestListRelationFilter
  offers?: Prisma.OfferListRelationFilter
  reviewsGiven?: Prisma.ReviewListRelationFilter
  reviewsReceived?: Prisma.ReviewListRelationFilter
  locationPings?: Prisma.LocationPingListRelationFilter
  notificationsReceived?: Prisma.NotificationListRelationFilter
  notificationsSent?: Prisma.NotificationListRelationFilter
}, "id" | "email">

export type UserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  name?: Prisma.SortOrder
  school?: Prisma.SortOrder
  role?: Prisma.SortOrder
  roleType?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  vehicleInfo?: Prisma.SortOrderInput | Prisma.SortOrder
  licensePlate?: Prisma.SortOrderInput | Prisma.SortOrder
  currentLatitude?: Prisma.SortOrderInput | Prisma.SortOrder
  currentLongitude?: Prisma.SortOrderInput | Prisma.SortOrder
  lastLocationUpdate?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.UserCountOrderByAggregateInput
  _avg?: Prisma.UserAvgOrderByAggregateInput
  _max?: Prisma.UserMaxOrderByAggregateInput
  _min?: Prisma.UserMinOrderByAggregateInput
  _sum?: Prisma.UserSumOrderByAggregateInput
}

export type UserScalarWhereWithAggregatesInput = {
  AND?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  OR?: Prisma.UserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.UserScalarWhereWithAggregatesInput | Prisma.UserScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"User"> | string
  email?: Prisma.StringWithAggregatesFilter<"User"> | string
  password?: Prisma.StringWithAggregatesFilter<"User"> | string
  name?: Prisma.StringWithAggregatesFilter<"User"> | string
  school?: Prisma.StringWithAggregatesFilter<"User"> | string
  role?: Prisma.EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
  roleType?: Prisma.StringWithAggregatesFilter<"User"> | string
  verified?: Prisma.BoolWithAggregatesFilter<"User"> | boolean
  rating?: Prisma.FloatWithAggregatesFilter<"User"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"User"> | Date | string
  vehicleInfo?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  licensePlate?: Prisma.StringNullableWithAggregatesFilter<"User"> | string | null
  currentLatitude?: Prisma.FloatNullableWithAggregatesFilter<"User"> | number | null
  currentLongitude?: Prisma.FloatNullableWithAggregatesFilter<"User"> | number | null
  lastLocationUpdate?: Prisma.DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
}

export type UserCreateInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserCreateManyInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
}

export type UserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type UserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  name?: Prisma.SortOrder
  school?: Prisma.SortOrder
  role?: Prisma.SortOrder
  roleType?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  vehicleInfo?: Prisma.SortOrder
  licensePlate?: Prisma.SortOrder
  currentLatitude?: Prisma.SortOrder
  currentLongitude?: Prisma.SortOrder
  lastLocationUpdate?: Prisma.SortOrder
}

export type UserAvgOrderByAggregateInput = {
  rating?: Prisma.SortOrder
  currentLatitude?: Prisma.SortOrder
  currentLongitude?: Prisma.SortOrder
}

export type UserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  name?: Prisma.SortOrder
  school?: Prisma.SortOrder
  role?: Prisma.SortOrder
  roleType?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  vehicleInfo?: Prisma.SortOrder
  licensePlate?: Prisma.SortOrder
  currentLatitude?: Prisma.SortOrder
  currentLongitude?: Prisma.SortOrder
  lastLocationUpdate?: Prisma.SortOrder
}

export type UserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  email?: Prisma.SortOrder
  password?: Prisma.SortOrder
  name?: Prisma.SortOrder
  school?: Prisma.SortOrder
  role?: Prisma.SortOrder
  roleType?: Prisma.SortOrder
  verified?: Prisma.SortOrder
  rating?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  vehicleInfo?: Prisma.SortOrder
  licensePlate?: Prisma.SortOrder
  currentLatitude?: Prisma.SortOrder
  currentLongitude?: Prisma.SortOrder
  lastLocationUpdate?: Prisma.SortOrder
}

export type UserSumOrderByAggregateInput = {
  rating?: Prisma.SortOrder
  currentLatitude?: Prisma.SortOrder
  currentLongitude?: Prisma.SortOrder
}

export type UserScalarRelationFilter = {
  is?: Prisma.UserWhereInput
  isNot?: Prisma.UserWhereInput
}

export type UserNullableScalarRelationFilter = {
  is?: Prisma.UserWhereInput | null
  isNot?: Prisma.UserWhereInput | null
}

export type StringFieldUpdateOperationsInput = {
  set?: string
}

export type EnumUserRoleFieldUpdateOperationsInput = {
  set?: $Enums.UserRole
}

export type BoolFieldUpdateOperationsInput = {
  set?: boolean
}

export type FloatFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type DateTimeFieldUpdateOperationsInput = {
  set?: Date | string
}

export type NullableStringFieldUpdateOperationsInput = {
  set?: string | null
}

export type NullableFloatFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type UserCreateNestedOneWithoutRidesAsDriverInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRidesAsDriverInput, Prisma.UserUncheckedCreateWithoutRidesAsDriverInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRidesAsDriverInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutRidesAsDriverNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRidesAsDriverInput, Prisma.UserUncheckedCreateWithoutRidesAsDriverInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRidesAsDriverInput
  upsert?: Prisma.UserUpsertWithoutRidesAsDriverInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutRidesAsDriverInput, Prisma.UserUpdateWithoutRidesAsDriverInput>, Prisma.UserUncheckedUpdateWithoutRidesAsDriverInput>
}

export type UserCreateNestedOneWithoutRidesAsRiderInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRidesAsRiderInput, Prisma.UserUncheckedCreateWithoutRidesAsRiderInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRidesAsRiderInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutRidesAsRiderNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutRidesAsRiderInput, Prisma.UserUncheckedCreateWithoutRidesAsRiderInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutRidesAsRiderInput
  upsert?: Prisma.UserUpsertWithoutRidesAsRiderInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutRidesAsRiderInput, Prisma.UserUpdateWithoutRidesAsRiderInput>, Prisma.UserUncheckedUpdateWithoutRidesAsRiderInput>
}

export type UserCreateNestedOneWithoutOffersInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOffersInput, Prisma.UserUncheckedCreateWithoutOffersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOffersInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutOffersNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutOffersInput, Prisma.UserUncheckedCreateWithoutOffersInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutOffersInput
  upsert?: Prisma.UserUpsertWithoutOffersInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutOffersInput, Prisma.UserUpdateWithoutOffersInput>, Prisma.UserUncheckedUpdateWithoutOffersInput>
}

export type UserCreateNestedOneWithoutReviewsGivenInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsGivenInput, Prisma.UserUncheckedCreateWithoutReviewsGivenInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsGivenInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutReviewsReceivedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsReceivedInput, Prisma.UserUncheckedCreateWithoutReviewsReceivedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsReceivedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutReviewsGivenNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsGivenInput, Prisma.UserUncheckedCreateWithoutReviewsGivenInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsGivenInput
  upsert?: Prisma.UserUpsertWithoutReviewsGivenInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReviewsGivenInput, Prisma.UserUpdateWithoutReviewsGivenInput>, Prisma.UserUncheckedUpdateWithoutReviewsGivenInput>
}

export type UserUpdateOneRequiredWithoutReviewsReceivedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutReviewsReceivedInput, Prisma.UserUncheckedCreateWithoutReviewsReceivedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutReviewsReceivedInput
  upsert?: Prisma.UserUpsertWithoutReviewsReceivedInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutReviewsReceivedInput, Prisma.UserUpdateWithoutReviewsReceivedInput>, Prisma.UserUncheckedUpdateWithoutReviewsReceivedInput>
}

export type UserCreateNestedOneWithoutLocationPingsInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutLocationPingsInput, Prisma.UserUncheckedCreateWithoutLocationPingsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLocationPingsInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutLocationPingsNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutLocationPingsInput, Prisma.UserUncheckedCreateWithoutLocationPingsInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutLocationPingsInput
  upsert?: Prisma.UserUpsertWithoutLocationPingsInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutLocationPingsInput, Prisma.UserUpdateWithoutLocationPingsInput>, Prisma.UserUncheckedUpdateWithoutLocationPingsInput>
}

export type UserCreateNestedOneWithoutNotificationsReceivedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsReceivedInput, Prisma.UserUncheckedCreateWithoutNotificationsReceivedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsReceivedInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserCreateNestedOneWithoutNotificationsSentInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsSentInput, Prisma.UserUncheckedCreateWithoutNotificationsSentInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsSentInput
  connect?: Prisma.UserWhereUniqueInput
}

export type UserUpdateOneRequiredWithoutNotificationsReceivedNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsReceivedInput, Prisma.UserUncheckedCreateWithoutNotificationsReceivedInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsReceivedInput
  upsert?: Prisma.UserUpsertWithoutNotificationsReceivedInput
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutNotificationsReceivedInput, Prisma.UserUpdateWithoutNotificationsReceivedInput>, Prisma.UserUncheckedUpdateWithoutNotificationsReceivedInput>
}

export type UserUpdateOneWithoutNotificationsSentNestedInput = {
  create?: Prisma.XOR<Prisma.UserCreateWithoutNotificationsSentInput, Prisma.UserUncheckedCreateWithoutNotificationsSentInput>
  connectOrCreate?: Prisma.UserCreateOrConnectWithoutNotificationsSentInput
  upsert?: Prisma.UserUpsertWithoutNotificationsSentInput
  disconnect?: Prisma.UserWhereInput | boolean
  delete?: Prisma.UserWhereInput | boolean
  connect?: Prisma.UserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.UserUpdateToOneWithWhereWithoutNotificationsSentInput, Prisma.UserUpdateWithoutNotificationsSentInput>, Prisma.UserUncheckedUpdateWithoutNotificationsSentInput>
}

export type UserCreateWithoutRidesAsDriverInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutRidesAsDriverInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutRidesAsDriverInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutRidesAsDriverInput, Prisma.UserUncheckedCreateWithoutRidesAsDriverInput>
}

export type UserUpsertWithoutRidesAsDriverInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutRidesAsDriverInput, Prisma.UserUncheckedUpdateWithoutRidesAsDriverInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutRidesAsDriverInput, Prisma.UserUncheckedCreateWithoutRidesAsDriverInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutRidesAsDriverInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutRidesAsDriverInput, Prisma.UserUncheckedUpdateWithoutRidesAsDriverInput>
}

export type UserUpdateWithoutRidesAsDriverInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutRidesAsDriverInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserCreateWithoutRidesAsRiderInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutRidesAsRiderInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutRidesAsRiderInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutRidesAsRiderInput, Prisma.UserUncheckedCreateWithoutRidesAsRiderInput>
}

export type UserUpsertWithoutRidesAsRiderInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutRidesAsRiderInput, Prisma.UserUncheckedUpdateWithoutRidesAsRiderInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutRidesAsRiderInput, Prisma.UserUncheckedCreateWithoutRidesAsRiderInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutRidesAsRiderInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutRidesAsRiderInput, Prisma.UserUncheckedUpdateWithoutRidesAsRiderInput>
}

export type UserUpdateWithoutRidesAsRiderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutRidesAsRiderInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserCreateWithoutOffersInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutOffersInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutOffersInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutOffersInput, Prisma.UserUncheckedCreateWithoutOffersInput>
}

export type UserUpsertWithoutOffersInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutOffersInput, Prisma.UserUncheckedUpdateWithoutOffersInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutOffersInput, Prisma.UserUncheckedCreateWithoutOffersInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutOffersInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutOffersInput, Prisma.UserUncheckedUpdateWithoutOffersInput>
}

export type UserUpdateWithoutOffersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutOffersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserCreateWithoutReviewsGivenInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutReviewsGivenInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutReviewsGivenInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsGivenInput, Prisma.UserUncheckedCreateWithoutReviewsGivenInput>
}

export type UserCreateWithoutReviewsReceivedInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutReviewsReceivedInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutReviewsReceivedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsReceivedInput, Prisma.UserUncheckedCreateWithoutReviewsReceivedInput>
}

export type UserUpsertWithoutReviewsGivenInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReviewsGivenInput, Prisma.UserUncheckedUpdateWithoutReviewsGivenInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsGivenInput, Prisma.UserUncheckedCreateWithoutReviewsGivenInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReviewsGivenInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReviewsGivenInput, Prisma.UserUncheckedUpdateWithoutReviewsGivenInput>
}

export type UserUpdateWithoutReviewsGivenInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutReviewsGivenInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserUpsertWithoutReviewsReceivedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutReviewsReceivedInput, Prisma.UserUncheckedUpdateWithoutReviewsReceivedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutReviewsReceivedInput, Prisma.UserUncheckedCreateWithoutReviewsReceivedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutReviewsReceivedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutReviewsReceivedInput, Prisma.UserUncheckedUpdateWithoutReviewsReceivedInput>
}

export type UserUpdateWithoutReviewsReceivedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutReviewsReceivedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserCreateWithoutLocationPingsInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutLocationPingsInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutLocationPingsInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutLocationPingsInput, Prisma.UserUncheckedCreateWithoutLocationPingsInput>
}

export type UserUpsertWithoutLocationPingsInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutLocationPingsInput, Prisma.UserUncheckedUpdateWithoutLocationPingsInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutLocationPingsInput, Prisma.UserUncheckedCreateWithoutLocationPingsInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutLocationPingsInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutLocationPingsInput, Prisma.UserUncheckedUpdateWithoutLocationPingsInput>
}

export type UserUpdateWithoutLocationPingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutLocationPingsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserCreateWithoutNotificationsReceivedInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsSent?: Prisma.NotificationCreateNestedManyWithoutSenderInput
}

export type UserUncheckedCreateWithoutNotificationsReceivedInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsSent?: Prisma.NotificationUncheckedCreateNestedManyWithoutSenderInput
}

export type UserCreateOrConnectWithoutNotificationsReceivedInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsReceivedInput, Prisma.UserUncheckedCreateWithoutNotificationsReceivedInput>
}

export type UserCreateWithoutNotificationsSentInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationCreateNestedManyWithoutRecipientInput
}

export type UserUncheckedCreateWithoutNotificationsSentInput = {
  id?: string
  email: string
  password: string
  name: string
  school: string
  role?: $Enums.UserRole
  roleType?: string
  verified?: boolean
  rating?: number
  createdAt?: Date | string
  updatedAt?: Date | string
  vehicleInfo?: string | null
  licensePlate?: string | null
  currentLatitude?: number | null
  currentLongitude?: number | null
  lastLocationUpdate?: Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedCreateNestedManyWithoutDriverInput
  ridesAsRider?: Prisma.RideRequestUncheckedCreateNestedManyWithoutRiderInput
  offers?: Prisma.OfferUncheckedCreateNestedManyWithoutRiderInput
  reviewsGiven?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewerInput
  reviewsReceived?: Prisma.ReviewUncheckedCreateNestedManyWithoutReviewedInput
  locationPings?: Prisma.LocationPingUncheckedCreateNestedManyWithoutUserInput
  notificationsReceived?: Prisma.NotificationUncheckedCreateNestedManyWithoutRecipientInput
}

export type UserCreateOrConnectWithoutNotificationsSentInput = {
  where: Prisma.UserWhereUniqueInput
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsSentInput, Prisma.UserUncheckedCreateWithoutNotificationsSentInput>
}

export type UserUpsertWithoutNotificationsReceivedInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsReceivedInput, Prisma.UserUncheckedUpdateWithoutNotificationsReceivedInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsReceivedInput, Prisma.UserUncheckedCreateWithoutNotificationsReceivedInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutNotificationsReceivedInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsReceivedInput, Prisma.UserUncheckedUpdateWithoutNotificationsReceivedInput>
}

export type UserUpdateWithoutNotificationsReceivedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsSent?: Prisma.NotificationUpdateManyWithoutSenderNestedInput
}

export type UserUncheckedUpdateWithoutNotificationsReceivedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsSent?: Prisma.NotificationUncheckedUpdateManyWithoutSenderNestedInput
}

export type UserUpsertWithoutNotificationsSentInput = {
  update: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsSentInput, Prisma.UserUncheckedUpdateWithoutNotificationsSentInput>
  create: Prisma.XOR<Prisma.UserCreateWithoutNotificationsSentInput, Prisma.UserUncheckedCreateWithoutNotificationsSentInput>
  where?: Prisma.UserWhereInput
}

export type UserUpdateToOneWithWhereWithoutNotificationsSentInput = {
  where?: Prisma.UserWhereInput
  data: Prisma.XOR<Prisma.UserUpdateWithoutNotificationsSentInput, Prisma.UserUncheckedUpdateWithoutNotificationsSentInput>
}

export type UserUpdateWithoutNotificationsSentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUpdateManyWithoutRecipientNestedInput
}

export type UserUncheckedUpdateWithoutNotificationsSentInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  password?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  school?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
  roleType?: Prisma.StringFieldUpdateOperationsInput | string
  verified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  rating?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  vehicleInfo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  licensePlate?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  currentLatitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  currentLongitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  lastLocationUpdate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  ridesAsDriver?: Prisma.RideUncheckedUpdateManyWithoutDriverNestedInput
  ridesAsRider?: Prisma.RideRequestUncheckedUpdateManyWithoutRiderNestedInput
  offers?: Prisma.OfferUncheckedUpdateManyWithoutRiderNestedInput
  reviewsGiven?: Prisma.ReviewUncheckedUpdateManyWithoutReviewerNestedInput
  reviewsReceived?: Prisma.ReviewUncheckedUpdateManyWithoutReviewedNestedInput
  locationPings?: Prisma.LocationPingUncheckedUpdateManyWithoutUserNestedInput
  notificationsReceived?: Prisma.NotificationUncheckedUpdateManyWithoutRecipientNestedInput
}


/**
 * Count Type UserCountOutputType
 */

export type UserCountOutputType = {
  ridesAsDriver: number
  ridesAsRider: number
  offers: number
  reviewsGiven: number
  reviewsReceived: number
  locationPings: number
  notificationsReceived: number
  notificationsSent: number
}

export type UserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ridesAsDriver?: boolean | UserCountOutputTypeCountRidesAsDriverArgs
  ridesAsRider?: boolean | UserCountOutputTypeCountRidesAsRiderArgs
  offers?: boolean | UserCountOutputTypeCountOffersArgs
  reviewsGiven?: boolean | UserCountOutputTypeCountReviewsGivenArgs
  reviewsReceived?: boolean | UserCountOutputTypeCountReviewsReceivedArgs
  locationPings?: boolean | UserCountOutputTypeCountLocationPingsArgs
  notificationsReceived?: boolean | UserCountOutputTypeCountNotificationsReceivedArgs
  notificationsSent?: boolean | UserCountOutputTypeCountNotificationsSentArgs
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the UserCountOutputType
   */
  select?: Prisma.UserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRidesAsDriverArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RideWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountRidesAsRiderArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RideRequestWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountOffersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OfferWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReviewsGivenArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReviewWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountReviewsReceivedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReviewWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountLocationPingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LocationPingWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotificationsReceivedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}

/**
 * UserCountOutputType without action
 */
export type UserCountOutputTypeCountNotificationsSentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.NotificationWhereInput
}


export type UserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  password?: boolean
  name?: boolean
  school?: boolean
  role?: boolean
  roleType?: boolean
  verified?: boolean
  rating?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  vehicleInfo?: boolean
  licensePlate?: boolean
  currentLatitude?: boolean
  currentLongitude?: boolean
  lastLocationUpdate?: boolean
  ridesAsDriver?: boolean | Prisma.User$ridesAsDriverArgs<ExtArgs>
  ridesAsRider?: boolean | Prisma.User$ridesAsRiderArgs<ExtArgs>
  offers?: boolean | Prisma.User$offersArgs<ExtArgs>
  reviewsGiven?: boolean | Prisma.User$reviewsGivenArgs<ExtArgs>
  reviewsReceived?: boolean | Prisma.User$reviewsReceivedArgs<ExtArgs>
  locationPings?: boolean | Prisma.User$locationPingsArgs<ExtArgs>
  notificationsReceived?: boolean | Prisma.User$notificationsReceivedArgs<ExtArgs>
  notificationsSent?: boolean | Prisma.User$notificationsSentArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user"]>

export type UserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  password?: boolean
  name?: boolean
  school?: boolean
  role?: boolean
  roleType?: boolean
  verified?: boolean
  rating?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  vehicleInfo?: boolean
  licensePlate?: boolean
  currentLatitude?: boolean
  currentLongitude?: boolean
  lastLocationUpdate?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  email?: boolean
  password?: boolean
  name?: boolean
  school?: boolean
  role?: boolean
  roleType?: boolean
  verified?: boolean
  rating?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  vehicleInfo?: boolean
  licensePlate?: boolean
  currentLatitude?: boolean
  currentLongitude?: boolean
  lastLocationUpdate?: boolean
}, ExtArgs["result"]["user"]>

export type UserSelectScalar = {
  id?: boolean
  email?: boolean
  password?: boolean
  name?: boolean
  school?: boolean
  role?: boolean
  roleType?: boolean
  verified?: boolean
  rating?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  vehicleInfo?: boolean
  licensePlate?: boolean
  currentLatitude?: boolean
  currentLongitude?: boolean
  lastLocationUpdate?: boolean
}

export type UserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "email" | "password" | "name" | "school" | "role" | "roleType" | "verified" | "rating" | "createdAt" | "updatedAt" | "vehicleInfo" | "licensePlate" | "currentLatitude" | "currentLongitude" | "lastLocationUpdate", ExtArgs["result"]["user"]>
export type UserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ridesAsDriver?: boolean | Prisma.User$ridesAsDriverArgs<ExtArgs>
  ridesAsRider?: boolean | Prisma.User$ridesAsRiderArgs<ExtArgs>
  offers?: boolean | Prisma.User$offersArgs<ExtArgs>
  reviewsGiven?: boolean | Prisma.User$reviewsGivenArgs<ExtArgs>
  reviewsReceived?: boolean | Prisma.User$reviewsReceivedArgs<ExtArgs>
  locationPings?: boolean | Prisma.User$locationPingsArgs<ExtArgs>
  notificationsReceived?: boolean | Prisma.User$notificationsReceivedArgs<ExtArgs>
  notificationsSent?: boolean | Prisma.User$notificationsSentArgs<ExtArgs>
  _count?: boolean | Prisma.UserCountOutputTypeDefaultArgs<ExtArgs>
}
export type UserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type UserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $UserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "User"
  objects: {
    ridesAsDriver: Prisma.$RidePayload<ExtArgs>[]
    ridesAsRider: Prisma.$RideRequestPayload<ExtArgs>[]
    offers: Prisma.$OfferPayload<ExtArgs>[]
    reviewsGiven: Prisma.$ReviewPayload<ExtArgs>[]
    reviewsReceived: Prisma.$ReviewPayload<ExtArgs>[]
    locationPings: Prisma.$LocationPingPayload<ExtArgs>[]
    notificationsReceived: Prisma.$NotificationPayload<ExtArgs>[]
    notificationsSent: Prisma.$NotificationPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    email: string
    password: string
    name: string
    school: string
    role: $Enums.UserRole
    roleType: string
    verified: boolean
    rating: number
    createdAt: Date
    updatedAt: Date
    vehicleInfo: string | null
    licensePlate: string | null
    currentLatitude: number | null
    currentLongitude: number | null
    lastLocationUpdate: Date | null
  }, ExtArgs["result"]["user"]>
  composites: {}
}

export type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$UserPayload, S>

export type UserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: UserCountAggregateInputType | true
  }

export interface UserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
  /**
   * Find zero or one User that matches the filter.
   * @param {UserFindUniqueArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends UserFindUniqueArgs>(args: Prisma.SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends UserFindFirstArgs>(args?: Prisma.SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
   * @example
   * // Get one User
   * const user = await prisma.user.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Users that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Users
   * const users = await prisma.user.findMany()
   * 
   * // Get first 10 Users
   * const users = await prisma.user.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends UserFindManyArgs>(args?: Prisma.SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User.
   * @param {UserCreateArgs} args - Arguments to create a User.
   * @example
   * // Create one User
   * const User = await prisma.user.create({
   *   data: {
   *     // ... data to create a User
   *   }
   * })
   * 
   */
  create<T extends UserCreateArgs>(args: Prisma.SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Users.
   * @param {UserCreateManyArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends UserCreateManyArgs>(args?: Prisma.SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Users and returns the data saved in the database.
   * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
   * @example
   * // Create many Users
   * const user = await prisma.user.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Users and only return the `id`
   * const userWithIdOnly = await prisma.user.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User.
   * @param {UserDeleteArgs} args - Arguments to delete one User.
   * @example
   * // Delete one User
   * const User = await prisma.user.delete({
   *   where: {
   *     // ... filter to delete one User
   *   }
   * })
   * 
   */
  delete<T extends UserDeleteArgs>(args: Prisma.SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User.
   * @param {UserUpdateArgs} args - Arguments to update one User.
   * @example
   * // Update one User
   * const user = await prisma.user.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends UserUpdateArgs>(args: Prisma.SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Users.
   * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
   * @example
   * // Delete a few Users
   * const { count } = await prisma.user.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends UserDeleteManyArgs>(args?: Prisma.SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends UserUpdateManyArgs>(args: Prisma.SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Users and returns the data updated in the database.
   * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
   * @example
   * // Update many Users
   * const user = await prisma.user.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Users and only return the `id`
   * const userWithIdOnly = await prisma.user.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User.
   * @param {UserUpsertArgs} args - Arguments to update or create a User.
   * @example
   * // Update or create a User
   * const user = await prisma.user.upsert({
   *   create: {
   *     // ... data to create a User
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User we want to update
   *   }
   * })
   */
  upsert<T extends UserUpsertArgs>(args: Prisma.SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Users.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserCountArgs} args - Arguments to filter Users to count.
   * @example
   * // Count the number of Users
   * const count = await prisma.user.count({
   *   where: {
   *     // ... the filter for the Users we want to count
   *   }
   * })
  **/
  count<T extends UserCountArgs>(
    args?: Prisma.Subset<T, UserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], UserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends UserAggregateArgs>(args: Prisma.Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

  /**
   * Group by User.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {UserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends UserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: UserGroupByArgs['orderBy'] }
      : { orderBy?: UserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the User model
 */
readonly fields: UserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for User.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  ridesAsDriver<T extends Prisma.User$ridesAsDriverArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$ridesAsDriverArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RidePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  ridesAsRider<T extends Prisma.User$ridesAsRiderArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$ridesAsRiderArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RideRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  offers<T extends Prisma.User$offersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$offersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OfferPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviewsGiven<T extends Prisma.User$reviewsGivenArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$reviewsGivenArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviewsReceived<T extends Prisma.User$reviewsReceivedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$reviewsReceivedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  locationPings<T extends Prisma.User$locationPingsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$locationPingsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LocationPingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notificationsReceived<T extends Prisma.User$notificationsReceivedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$notificationsReceivedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  notificationsSent<T extends Prisma.User$notificationsSentArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.User$notificationsSentArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$NotificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the User model
 */
export interface UserFieldRefs {
  readonly id: Prisma.FieldRef<"User", 'String'>
  readonly email: Prisma.FieldRef<"User", 'String'>
  readonly password: Prisma.FieldRef<"User", 'String'>
  readonly name: Prisma.FieldRef<"User", 'String'>
  readonly school: Prisma.FieldRef<"User", 'String'>
  readonly role: Prisma.FieldRef<"User", 'UserRole'>
  readonly roleType: Prisma.FieldRef<"User", 'String'>
  readonly verified: Prisma.FieldRef<"User", 'Boolean'>
  readonly rating: Prisma.FieldRef<"User", 'Float'>
  readonly createdAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"User", 'DateTime'>
  readonly vehicleInfo: Prisma.FieldRef<"User", 'String'>
  readonly licensePlate: Prisma.FieldRef<"User", 'String'>
  readonly currentLatitude: Prisma.FieldRef<"User", 'Float'>
  readonly currentLongitude: Prisma.FieldRef<"User", 'Float'>
  readonly lastLocationUpdate: Prisma.FieldRef<"User", 'DateTime'>
}
    

// Custom InputTypes
/**
 * User findUnique
 */
export type UserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findUniqueOrThrow
 */
export type UserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User findFirst
 */
export type UserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findFirstOrThrow
 */
export type UserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which User to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Users.
   */
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User findMany
 */
export type UserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter, which Users to fetch.
   */
  where?: Prisma.UserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Users to fetch.
   */
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Users.
   */
  cursor?: Prisma.UserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Users from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Users.
   */
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * User create
 */
export type UserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to create a User.
   */
  data: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
}

/**
 * User createMany
 */
export type UserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User createManyAndReturn
 */
export type UserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to create many Users.
   */
  data: Prisma.UserCreateManyInput | Prisma.UserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * User update
 */
export type UserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The data needed to update a User.
   */
  data: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
  /**
   * Choose, which User to update.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User updateMany
 */
export type UserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User updateManyAndReturn
 */
export type UserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * The data used to update Users.
   */
  data: Prisma.XOR<Prisma.UserUpdateManyMutationInput, Prisma.UserUncheckedUpdateManyInput>
  /**
   * Filter which Users to update
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to update.
   */
  limit?: number
}

/**
 * User upsert
 */
export type UserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * The filter to search for the User to update in case it exists.
   */
  where: Prisma.UserWhereUniqueInput
  /**
   * In case the User found by the `where` argument doesn't exist, create a new User with this data.
   */
  create: Prisma.XOR<Prisma.UserCreateInput, Prisma.UserUncheckedCreateInput>
  /**
   * In case the User was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.UserUpdateInput, Prisma.UserUncheckedUpdateInput>
}

/**
 * User delete
 */
export type UserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  /**
   * Filter which User to delete.
   */
  where: Prisma.UserWhereUniqueInput
}

/**
 * User deleteMany
 */
export type UserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Users to delete
   */
  where?: Prisma.UserWhereInput
  /**
   * Limit how many Users to delete.
   */
  limit?: number
}

/**
 * User.ridesAsDriver
 */
export type User$ridesAsDriverArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ride
   */
  select?: Prisma.RideSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Ride
   */
  omit?: Prisma.RideOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RideInclude<ExtArgs> | null
  where?: Prisma.RideWhereInput
  orderBy?: Prisma.RideOrderByWithRelationInput | Prisma.RideOrderByWithRelationInput[]
  cursor?: Prisma.RideWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.RideScalarFieldEnum | Prisma.RideScalarFieldEnum[]
}

/**
 * User.ridesAsRider
 */
export type User$ridesAsRiderArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RideRequest
   */
  select?: Prisma.RideRequestSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RideRequest
   */
  omit?: Prisma.RideRequestOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RideRequestInclude<ExtArgs> | null
  where?: Prisma.RideRequestWhereInput
  orderBy?: Prisma.RideRequestOrderByWithRelationInput | Prisma.RideRequestOrderByWithRelationInput[]
  cursor?: Prisma.RideRequestWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.RideRequestScalarFieldEnum | Prisma.RideRequestScalarFieldEnum[]
}

/**
 * User.offers
 */
export type User$offersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Offer
   */
  select?: Prisma.OfferSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Offer
   */
  omit?: Prisma.OfferOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OfferInclude<ExtArgs> | null
  where?: Prisma.OfferWhereInput
  orderBy?: Prisma.OfferOrderByWithRelationInput | Prisma.OfferOrderByWithRelationInput[]
  cursor?: Prisma.OfferWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OfferScalarFieldEnum | Prisma.OfferScalarFieldEnum[]
}

/**
 * User.reviewsGiven
 */
export type User$reviewsGivenArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Review
   */
  select?: Prisma.ReviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Review
   */
  omit?: Prisma.ReviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReviewInclude<ExtArgs> | null
  where?: Prisma.ReviewWhereInput
  orderBy?: Prisma.ReviewOrderByWithRelationInput | Prisma.ReviewOrderByWithRelationInput[]
  cursor?: Prisma.ReviewWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReviewScalarFieldEnum | Prisma.ReviewScalarFieldEnum[]
}

/**
 * User.reviewsReceived
 */
export type User$reviewsReceivedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Review
   */
  select?: Prisma.ReviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Review
   */
  omit?: Prisma.ReviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReviewInclude<ExtArgs> | null
  where?: Prisma.ReviewWhereInput
  orderBy?: Prisma.ReviewOrderByWithRelationInput | Prisma.ReviewOrderByWithRelationInput[]
  cursor?: Prisma.ReviewWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReviewScalarFieldEnum | Prisma.ReviewScalarFieldEnum[]
}

/**
 * User.locationPings
 */
export type User$locationPingsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LocationPing
   */
  select?: Prisma.LocationPingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LocationPing
   */
  omit?: Prisma.LocationPingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LocationPingInclude<ExtArgs> | null
  where?: Prisma.LocationPingWhereInput
  orderBy?: Prisma.LocationPingOrderByWithRelationInput | Prisma.LocationPingOrderByWithRelationInput[]
  cursor?: Prisma.LocationPingWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LocationPingScalarFieldEnum | Prisma.LocationPingScalarFieldEnum[]
}

/**
 * User.notificationsReceived
 */
export type User$notificationsReceivedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * User.notificationsSent
 */
export type User$notificationsSentArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Notification
   */
  select?: Prisma.NotificationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Notification
   */
  omit?: Prisma.NotificationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.NotificationInclude<ExtArgs> | null
  where?: Prisma.NotificationWhereInput
  orderBy?: Prisma.NotificationOrderByWithRelationInput | Prisma.NotificationOrderByWithRelationInput[]
  cursor?: Prisma.NotificationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.NotificationScalarFieldEnum | Prisma.NotificationScalarFieldEnum[]
}

/**
 * User without action
 */
export type UserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
}
