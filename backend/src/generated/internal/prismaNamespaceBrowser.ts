
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  User: 'User',
  Ride: 'Ride',
  RideRequest: 'RideRequest',
  Offer: 'Offer',
  Review: 'Review',
  Ad: 'Ad',
  LocationPing: 'LocationPing',
  Notification: 'Notification'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  school: 'school',
  role: 'role',
  roleType: 'roleType',
  verified: 'verified',
  rating: 'rating',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  vehicleInfo: 'vehicleInfo',
  licensePlate: 'licensePlate',
  currentLatitude: 'currentLatitude',
  currentLongitude: 'currentLongitude',
  lastLocationUpdate: 'lastLocationUpdate'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const RideScalarFieldEnum = {
  id: 'id',
  driverId: 'driverId',
  origin: 'origin',
  destination: 'destination',
  departureTime: 'departureTime',
  seats: 'seats',
  fare: 'fare',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  originLatitude: 'originLatitude',
  originLongitude: 'originLongitude',
  destLatitude: 'destLatitude',
  destLongitude: 'destLongitude',
  proposedFare: 'proposedFare',
  acceptedFare: 'acceptedFare',
  bargainHistory: 'bargainHistory'
} as const

export type RideScalarFieldEnum = (typeof RideScalarFieldEnum)[keyof typeof RideScalarFieldEnum]


export const RideRequestScalarFieldEnum = {
  id: 'id',
  riderId: 'riderId',
  rideId: 'rideId',
  maxFare: 'maxFare',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  origin: 'origin',
  destination: 'destination',
  departureTime: 'departureTime',
  passengers: 'passengers',
  message: 'message',
  originLatitude: 'originLatitude',
  originLongitude: 'originLongitude',
  destLatitude: 'destLatitude',
  destLongitude: 'destLongitude'
} as const

export type RideRequestScalarFieldEnum = (typeof RideRequestScalarFieldEnum)[keyof typeof RideRequestScalarFieldEnum]


export const OfferScalarFieldEnum = {
  id: 'id',
  rideId: 'rideId',
  riderId: 'riderId',
  amount: 'amount',
  accepted: 'accepted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type OfferScalarFieldEnum = (typeof OfferScalarFieldEnum)[keyof typeof OfferScalarFieldEnum]


export const ReviewScalarFieldEnum = {
  id: 'id',
  reviewerId: 'reviewerId',
  reviewedId: 'reviewedId',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt'
} as const

export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


export const AdScalarFieldEnum = {
  id: 'id',
  title: 'title',
  image: 'image',
  link: 'link',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AdScalarFieldEnum = (typeof AdScalarFieldEnum)[keyof typeof AdScalarFieldEnum]


export const LocationPingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  latitude: 'latitude',
  longitude: 'longitude',
  timestamp: 'timestamp'
} as const

export type LocationPingScalarFieldEnum = (typeof LocationPingScalarFieldEnum)[keyof typeof LocationPingScalarFieldEnum]


export const NotificationScalarFieldEnum = {
  id: 'id',
  recipientId: 'recipientId',
  senderId: 'senderId',
  type: 'type',
  message: 'message',
  read: 'read',
  createdAt: 'createdAt'
} as const

export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull
} as const

export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull
} as const

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]

